name: Backwards Compatibility Tests NeuralSearch
on:
  push:
    branches:
      - "test-bwc"

jobs:
  Get-CI-Image-Tag:
    uses: opensearch-project/opensearch-build/.github/workflows/get-ci-image-tag.yml@main
    with:
      product: opensearch

  Restart-Upgrade-BWCTests-NeuralSearch:
    needs: Get-CI-Image-Tag
    strategy:
      matrix:
        java: [ 21 ]
        os: [ubuntu-latest]
        bwc_version : [ "3.0.0" ]  # Test with just one version for quick testing
        opensearch_version : [ "3.2.0-SNAPSHOT" ]

    name: NeuralSearch Restart-Upgrade BWC Tests
    runs-on: ${{ matrix.os }}
    env:
      BWC_VERSION_RESTART_UPGRADE: ${{ matrix.bwc_version }}

    steps:
      # Run cleanup on host before starting container
      - name: Check disk space before cleanup
        run: |
          echo "Disk space before cleanup (host):"
          df -h

      - name: Free up disk space
        uses: mathio/gha-cleanup@v1
        with:
          remove-browsers: true
          verbose: false

      - name: Check disk space after cleanup
        run: |
          echo "Disk space after cleanup (host):"
          df -h

      - name: Checkout neural-search
        uses: actions/checkout@v4

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Run NeuralSearch Restart-Upgrade BWC Tests in Container
        run: |
          docker run \
            --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e BWC_VERSION_RESTART_UPGRADE=${{ matrix.bwc_version }} \
            ${{ needs.Get-CI-Image-Tag.outputs.ci-image-version-linux }} \
            bash -c "
              ${{ needs.Get-CI-Image-Tag.outputs.ci-image-start-command }} &&
              echo 'Disk space in container:' &&
              df -h &&
              chown -R 1000:1000 /workspace &&
              su \$(id -un 1000) -c './gradlew :qa:restart-upgrade:testAgainstNewCluster -D\"tests.bwc.version=${{ matrix.bwc_version }}\"'
            "

      - name: Check disk space after tests
        if: always()
        run: |
          echo "Disk space after tests completed (host):"
          df -h

  Rolling-Upgrade-BWCTests-NeuralSearch:
    needs: Get-CI-Image-Tag
    strategy:
      matrix:
        java: [21]
        os: [ubuntu-latest]
        bwc_version: [ "3.0.0" ]  # Test with just one version for quick testing
        opensearch_version: [ "3.2.0-SNAPSHOT" ]

    name: NeuralSearch Rolling-Upgrade BWC Tests
    runs-on: ${{ matrix.os }}
    env:
      BWC_VERSION_ROLLING_UPGRADE: ${{ matrix.bwc_version }}

    steps:
      # Run cleanup on host before starting container
      - name: Check disk space before cleanup
        run: |
          echo "Disk space before cleanup (host):"
          df -h

      - name: Free up disk space
        uses: mathio/gha-cleanup@v1
        with:
          remove-browsers: true
          verbose: false

      - name: Check disk space after cleanup
        run: |
          echo "Disk space after cleanup (host):"
          df -h

      - name: Checkout neural-search
        uses: actions/checkout@v4

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Run NeuralSearch Rolling-Upgrade BWC Tests in Container
        run: |
          docker run \
            --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e BWC_VERSION_ROLLING_UPGRADE=${{ matrix.bwc_version }} \
            ${{ needs.Get-CI-Image-Tag.outputs.ci-image-version-linux }} \
            bash -c "
              ${{ needs.Get-CI-Image-Tag.outputs.ci-image-start-command }} &&
              echo 'Disk space in container:' &&
              df -h &&
              chown -R 1000:1000 /workspace &&
              su \$(id -un 1000) -c './gradlew :qa:rolling-upgrade:testRollingUpgrade -D\"tests.bwc.version=${{ matrix.bwc_version }}\"'
            "

      - name: Check disk space after tests
        if: always()
        run: |
          echo "Disk space after tests completed (host):"
          df -h

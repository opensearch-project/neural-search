name: Build and Test Neural Search
on:
  schedule:
    - cron: '0 0 * * *'  # every night
  push:
    branches:
      - "*"
      - "feature/**"
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches:
      - "*"
      - "feature/**"

jobs:
  Get-CI-Image-Tag:
    uses: opensearch-project/opensearch-build/.github/workflows/get-ci-image-tag.yml@main
    with:
      product: opensearch

  Check-neural-search-linux:
    needs: Get-CI-Image-Tag
    strategy:
      matrix:
        java: [21]
        os: [ubuntu-latest]

    name: Gradle Check Linux
    runs-on: ${{ matrix.os }}
    container:
      # using the same image which is used by opensearch-build team to build the OpenSearch Distribution
      # this image tag is subject to change as more dependencies and updates will arrive over time
      image: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-version-linux }}
      # need to switch to root so that github actions can install runner binary on container without permission issues.
      options: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-start-options }}

    steps:
      - name: Run start commands
        run: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-start-command }}

      - uses: actions/checkout@v4
        if: github.event_name == 'push' || github.event_name == 'schedule'

      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Run build
        run: |
          chown -R 1000:1000 `pwd`
          su `id -un 1000` -c "./gradlew check"

      - name: Upload Coverage Report
        if: ${{ !cancelled() }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  Check-neural-search-windows:
    strategy:
      matrix:
        java: [21]
        os: [windows-latest]

    name: Gradle Check Windows
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        if: github.event_name == 'push' || github.event_name == 'schedule'

      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Run build
        run: |
          ./gradlew check

  Precommit-neural-search-linux:
    needs: Get-CI-Image-Tag
    strategy:
      matrix:
        java: [21]
        os: [ubuntu-latest]

    name: Pre-commit Linux
    runs-on: ${{ matrix.os }}
    container:
      # using the same image which is used by opensearch-build team to build the OpenSearch Distribution
      # this image tag is subject to change as more dependencies and updates will arrive over time
      image: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-version-linux }}
      # need to switch to root so that github actions can install runner binary on container without permission issues.
      options: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-start-options }}

    steps:
      - name: Run start commands
        run: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-start-command }}

      - uses: actions/checkout@v4
        if: github.event_name == 'push' || github.event_name == 'schedule'

      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Run build
        run: |
          chown -R 1000:1000 `pwd`
          su `id -un 1000` -c "./gradlew precommit --parallel"

      - name: Upload Coverage Report
        if: ${{ !cancelled() }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  Precommit-neural-search-windows:
    strategy:
      matrix:
        java: [21]
        os: [windows-latest]

    name: Pre-commit Windows
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        if: github.event_name == 'push' || github.event_name == 'schedule'

      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Run build
        run: |
          ./gradlew precommit --parallel
